{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Initializer","extendedModule":"SwiftBackports","externalID":"s:14SwiftBackports8BackportVAAypRszlE6UTTypeV8mimeType12conformingToAEyyp_GSgSS_AHtcfc","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"mimeType"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"conformingTo"},{"text":": `Self`","kind":"text"},{"kind":"text","text":")"}],"symbolKind":"init","modules":[{"name":"SwiftBackports"}],"conformance":{"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Any","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(mimeType:conformingTo:)"},"hierarchy":{"paths":[["doc:\/\/SwiftBackports\/documentation\/SwiftBackports","doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport","doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport\/UTType"]]},"abstract":[{"type":"text","text":"Create a type given a MIME type."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport\/UTType\/init(mimeType:conformingTo:)"},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"?(","kind":"text"},{"text":"mimeType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"conformingTo","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"type"},{"text":": `Self`","kind":"text"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"A type. If no types are known to the system with the"},{"type":"text","text":" "},{"text":"specified MIME type and conformance but the inputs were otherwise","type":"text"},{"text":" ","type":"text"},{"text":"valid, a dynamic type may be provided. If the inputs were not valid,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"returns "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"mimeType: The MIME type for which a type is desired.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"supertype: Another type that the resulting type must conform to.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Typically, you would pass "},{"code":".data","type":"codeVoice"},{"type":"text","text":"."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is equivalent to:"}]},{"syntax":null,"code":["UTType(tag: mimeType, tagClass: .mimeType, conformingTo: supertype)"],"type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/swiftbackports\/backport\/uttype\/init(mimetype:conformingto:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://SwiftBackports/documentation/SwiftBackports/Backport/UTType/init(mimeType:conformingTo:)":{"identifier":"doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport\/UTType\/init(mimeType:conformingTo:)","type":"topic","url":"\/documentation\/swiftbackports\/backport\/uttype\/init(mimetype:conformingto:)","title":"init(mimeType:conformingTo:)","abstract":[{"type":"text","text":"Create a type given a MIME type."}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"text":"mimeType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"conformingTo"},{"kind":"text","text":": `Self`"},{"kind":"text","text":")"}],"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://SwiftBackports/documentation/SwiftBackports":{"role":"collection","title":"SwiftBackports","url":"\/documentation\/swiftbackports","identifier":"doc:\/\/SwiftBackports\/documentation\/SwiftBackports","type":"topic","kind":"symbol","abstract":[]},"doc://SwiftBackports/documentation/SwiftBackports/Backport":{"role":"symbol","title":"Backport","url":"\/documentation\/swiftbackports\/backport","identifier":"doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Backport"}],"type":"topic","navigatorTitle":[{"text":"Backport","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"type":"text","text":" "},{"type":"text","text":"including types, functions, properties, property wrappers and more."}]},"doc://SwiftBackports/documentation/SwiftBackports/Backport/UTType":{"identifier":"doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport\/UTType","url":"\/documentation\/swiftbackports\/backport\/uttype","title":"Backport.UTType","type":"topic","deprecated":true,"abstract":[{"type":"text","text":"A structure representing a type in a type hierarchy."}],"role":"symbol","navigatorTitle":[{"text":"UTType","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UTType","kind":"identifier"}],"kind":"symbol","conformance":{"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}}}}