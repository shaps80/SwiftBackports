{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SwiftBackports\/documentation\/SwiftBackports","doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport","doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport\/UTType"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Gets an active "},{"code":"UTType","type":"codeVoice"},{"text":" corresponding to a type that is declared as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"“imported” by the current process."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"importedAs","kind":"externalParam"},{"kind":"text","text":" "},{"text":"identifier","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"conformingTo"},{"kind":"text","text":" "},{"text":"type","kind":"internalParam"},{"text":": `Self`","kind":"text"},{"text":"? = nil)","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"A type whose identifier may or may not be equal to"},{"type":"text","text":" "},{"type":"codeVoice","code":"identifier"},{"type":"text","text":", but which is functionally equivalent."}],"type":"paragraph"}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"identifier: The type identifier for which a type is desired.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"parentType: A parent type that the resulting type is expected to"},{"type":"text","text":" "},{"text":"conform to. If ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", conformance to either "},{"code":".data","type":"codeVoice"},{"type":"text","text":" or "},{"code":".package","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"is assumed."}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Use this method to get types that are imported by your application. If"},{"type":"text","text":" "},{"code":"identifier","type":"codeVoice"},{"text":" does not correspond to any type known to the system, the","type":"text"},{"type":"text","text":" "},{"text":"result is undefined.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You would generally use this method in the body of a ","type":"text"},{"code":"static","type":"codeVoice"},{"text":" computed","type":"text"},{"type":"text","text":" "},{"type":"text","text":"property in an extension of "},{"code":"UTType","type":"codeVoice"},{"type":"text","text":" as the type can change over time:"}]},{"syntax":null,"type":"codeListing","code":["extension UTType {","static var competitorFileFormat: UTType { UTType(importedAs: \"com.example.competitorfileformat\") }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the general case, this method returns a type with the same"},{"type":"text","text":" "},{"type":"text","text":"identifier, but if that type has a preferred filename extension and"},{"type":"text","text":" "},{"inlineContent":[{"text":"another","type":"text"}],"type":"emphasis"},{"type":"text","text":" type is the preferred type for that extension, then that"},{"text":" ","type":"text"},{"inlineContent":[{"text":"other","type":"text"}],"type":"emphasis"},{"type":"text","text":" type is substituted."}]}],"kind":"content"}],"metadata":{"modules":[{"name":"SwiftBackports"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"importedAs","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"conformingTo"},{"kind":"text","text":": `Self`"},{"kind":"text","text":"?)"}],"title":"init(importedAs:conformingTo:)","role":"symbol","extendedModule":"SwiftBackports","symbolKind":"init","externalID":"s:14SwiftBackports8BackportVAAypRszlE6UTTypeV10importedAs12conformingToAEyyp_GSS_AHSgtcfc","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Any","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"roleHeading":"Initializer"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftbackports\/backport\/uttype\/init(importedas:conformingto:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport\/UTType\/init(importedAs:conformingTo:)"},"sections":[],"references":{"doc://SwiftBackports/documentation/SwiftBackports":{"role":"collection","title":"SwiftBackports","url":"\/documentation\/swiftbackports","identifier":"doc:\/\/SwiftBackports\/documentation\/SwiftBackports","type":"topic","kind":"symbol","abstract":[]},"doc://SwiftBackports/documentation/SwiftBackports/Backport":{"role":"symbol","title":"Backport","url":"\/documentation\/swiftbackports\/backport","identifier":"doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Backport"}],"type":"topic","navigatorTitle":[{"text":"Backport","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"type":"text","text":" "},{"type":"text","text":"including types, functions, properties, property wrappers and more."}]},"doc://SwiftBackports/documentation/SwiftBackports/Backport/UTType/init(importedAs:conformingTo:)":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport\/UTType\/init(importedAs:conformingTo:)","url":"\/documentation\/swiftbackports\/backport\/uttype\/init(importedas:conformingto:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"importedAs","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"conformingTo","kind":"externalParam"},{"kind":"text","text":": `Self`"},{"kind":"text","text":"?)"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Any"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Gets an active "},{"type":"codeVoice","code":"UTType"},{"type":"text","text":" corresponding to a type that is declared as"},{"type":"text","text":" "},{"text":"“imported” by the current process.","type":"text"}],"title":"init(importedAs:conformingTo:)"},"doc://SwiftBackports/documentation/SwiftBackports/Backport/UTType":{"identifier":"doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport\/UTType","url":"\/documentation\/swiftbackports\/backport\/uttype","title":"Backport.UTType","type":"topic","deprecated":true,"abstract":[{"type":"text","text":"A structure representing a type in a type hierarchy."}],"role":"symbol","navigatorTitle":[{"text":"UTType","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UTType","kind":"identifier"}],"kind":"symbol","conformance":{"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}}}}