{"abstract":[{"type":"text","text":"Create a type given a filename extension."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftbackports\/backport\/uttype\/init(filenameextension:conformingto:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport\/UTType\/init(filenameExtension:conformingTo:)"},"metadata":{"externalID":"s:14SwiftBackports8BackportVAAypRszlE6UTTypeV17filenameExtension12conformingToAEyyp_GSgSS_AHtcfc","modules":[{"name":"SwiftBackports"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Wrapped"},{"text":" is ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"filenameExtension"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"conformingTo"},{"text":": `Self`","kind":"text"},{"kind":"text","text":")"}],"symbolKind":"init","roleHeading":"Initializer","extendedModule":"SwiftBackports","role":"symbol","title":"init(filenameExtension:conformingTo:)"},"hierarchy":{"paths":[["doc:\/\/SwiftBackports\/documentation\/SwiftBackports","doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport","doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport\/UTType"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"filenameExtension"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"conformingTo","kind":"externalParam"},{"kind":"text","text":" "},{"text":"type","kind":"internalParam"},{"text":": `Self`","kind":"text"},{"text":")","kind":"text"}]}]},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A type. If no types are known to the system with the"},{"type":"text","text":" "},{"type":"text","text":"specified filename extension and conformance but the inputs were"},{"text":" ","type":"text"},{"text":"otherwise valid, a dynamic type may be provided. If the inputs were","type":"text"},{"type":"text","text":" "},{"text":"not valid, returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"filenameExtension: The filename extension for which a type is"},{"text":" ","type":"text"},{"type":"text","text":"desired."}]}]},{"content":[{"inlineContent":[{"text":"supertype: Another type that the resulting type must conform to.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Typically, you would pass "},{"type":"codeVoice","code":".data"},{"type":"text","text":" or "},{"code":".package","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"This method is equivalent to:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["UTType(tag: filenameExtension, tagClass: .filenameExtension, conformingTo: supertype)"]},{"inlineContent":[{"text":"To get the type of a file on disk, use ","type":"text"},{"type":"codeVoice","code":"URLResourceValues.contentType"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"You should not attempt to derive the type of a file system object based","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"solely on its filename extension."}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://SwiftBackports/documentation/SwiftBackports/Backport":{"role":"symbol","title":"Backport","url":"\/documentation\/swiftbackports\/backport","identifier":"doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Backport"}],"type":"topic","navigatorTitle":[{"text":"Backport","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"type":"text","text":" "},{"type":"text","text":"including types, functions, properties, property wrappers and more."}]},"doc://SwiftBackports/documentation/SwiftBackports/Backport/UTType/init(filenameExtension:conformingTo:)":{"identifier":"doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport\/UTType\/init(filenameExtension:conformingTo:)","url":"\/documentation\/swiftbackports\/backport\/uttype\/init(filenameextension:conformingto:)","title":"init(filenameExtension:conformingTo:)","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"filenameExtension","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"conformingTo"},{"text":": `Self`","kind":"text"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Create a type given a filename extension."}],"role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" is "},{"code":"Any","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://SwiftBackports/documentation/SwiftBackports":{"role":"collection","title":"SwiftBackports","url":"\/documentation\/swiftbackports","identifier":"doc:\/\/SwiftBackports\/documentation\/SwiftBackports","type":"topic","kind":"symbol","abstract":[]},"doc://SwiftBackports/documentation/SwiftBackports/Backport/UTType":{"identifier":"doc:\/\/SwiftBackports\/documentation\/SwiftBackports\/Backport\/UTType","url":"\/documentation\/swiftbackports\/backport\/uttype","title":"Backport.UTType","type":"topic","deprecated":true,"abstract":[{"type":"text","text":"A structure representing a type in a type hierarchy."}],"role":"symbol","navigatorTitle":[{"text":"UTType","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UTType","kind":"identifier"}],"kind":"symbol","conformance":{"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}}}}